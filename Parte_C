#client_sensor.py
import matplotlib.pyplot as plt

HOST = '0.0.0.0'  
PORT = 5000

servidor = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
servidor.bind((HOST, PORT))
servidor.listen(5) #5 conexiones maximas
print(f"Servidor escuchando en {HOST}:{PORT}")

try:
    cliente, direccion = servidor.accept()
    print(f"Cliente conectado desde {direccion}")
    plt.ion()  # Activar modo interactivo
    fig, ax = plt.subplots()
    
    while True:
        lectura = sensor_temp.read()
        if lectura is not None:
            # Convertir lectura a temperatura
            temp_c = lectura * 5 * 20 #Fijarse si se puede ingresar la temp_c directamente
            mensaje = f"{temp_c:.2f}" #Envia al cliente la temperatura en °C
            try:
                cliente.send(mensaje.encode('utf-8'))
                print(f"Enviado: {mensaje}")
            except BrokenPipeError:
                print("Cliente desconectado")
                break
        capturasTemperatura.append(temp_c) #Guardamos las capturas para graficar
        capturasFecha.append(datetime.now().strftime("%H:%M:%S"))

        ax.clear() #Creamos el grafico fuera del while para que no se sobrepongan
        ax.plot(capturasFecha, capturasTemperatura, marker="o")
        ax.set_xlabel("Hora")
        ax.set_ylabel("Temperatura (°C)")
        ax.set_title("Registro de Temperatura")
        ax.tick_params(axis='x', rotation=45)
        ax.grid(True)
        plt.pause(0.1)  # Pausa corta para actualizar el gráfico (no usar plt.show() dentro del bucle)

except KeyboardInterrupt:
    print("Servidor finalizado")
    #Cerrar conexiones
finally:
    cliente.close()
    servidor.close()
    board.exit()

